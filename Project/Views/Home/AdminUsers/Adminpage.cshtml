@model IEnumerable<Gruppe4NLA.Areas.Identity.Data.ApplicationUser>
@using System.Linq
@using Gruppe4NLA.Areas.Identity.Data
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Admin - User Management";
}

@if (TempData["AdminUsersMessage"] is string msg)
{
    <div class="alert alert-info">@msg</div>
}
@if (TempData["AdminUsersError"] is string err)
{
    <div class="alert alert-danger">@err</div>
}

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            @*<th>Username</th>*@
            <th>Email</th>
            <th>Role</th>
            <th>Reset Password</th>
            <th>Delete</th> @* <-- NY kolonne *@
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            var userRoles = await UserManager.GetRolesAsync(user);
            var currentRole = userRoles.FirstOrDefault();

            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    <form asp-action="SetRole" asp-controller="AdminUsers" method="post" style="display:inline;">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="userId" value="@user.Id" />
                        <select name="role" class="form-select form-select-sm" onchange="this.form.submit()">
                            <option value="">(no role)</option>
                            @foreach (var r in (IEnumerable<string>)ViewBag.AllRoles)
                            {
                                var isSelected = string.Equals(r, currentRole, StringComparison.OrdinalIgnoreCase);
                                <option value="@r" selected="@(isSelected ? "selected" : null)">@r</option>
                            }
                        </select>
                    </form>
                </td>
                <td>
                    <form asp-action="ResetPassword" asp-controller="AdminUsers" method="post" style="display:inline;">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="userId" value="@user.Id" />
                        <button class="btn btn-warning btn-sm">Reset Password</button>
                    </form>
                </td>
                <td>
                    <form asp-action="DeleteUser" asp-controller="AdminUsers" method="post" style="display:inline;"
                          onsubmit="return confirm('Delete the user @user.Email? Click OK in the box to confirm.');">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="userId" value="@user.Id" />
                        <button class="btn btn-danger btn-sm">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
